name: Build

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - main

env:
  REGISTRY: "registry.digitalocean.com/sol-registry"
  IMAGE_NAME: "core"


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) --file Dockerfile .

      # - name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # - name: Log in to DigitalOcean Container Registry with short-lived credentials
      #   run: doctl registry login --expiry-seconds 600

      # - name: Remove all old images
      #   run: if [ ! -z "$(doctl registry repository list -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --context teamwork | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) -t -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --context teamwork $(doctl registry repository list-tags $(echo $IMAGE_NAME) -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --context teamwork | grep -o "sha.*") --force; else echo "No repository"; fi

      # - name: Push image to DigitalOcean Container Registry
      #   run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Update remote
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_SECRET }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            cd /home/apps/odoo

            # Обновляем образ в .env
            echo "ODOO_IMAGE=$REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7}" > .env

            # Логин в Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com

            # Остановка, обновление, запуск
            docker-compose pull
            docker-compose down
            docker-compose up -d

            # Получение SSL, если не существует
            if [ ! -f "./nginx/certbot/conf/live/${DOMAIN}/fullchain.pem" ]; then
              docker-compose run --rm certbot
              docker-compose restart nginx
            fi

